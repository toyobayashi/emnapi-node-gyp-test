From be4c08f356e11b3cf87a285dec34325832497d60 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Thu, 18 Jan 2024 23:07:20 +0800
Subject: [PATCH 01/12] feat: add basic gyp support

---
 packages/emnapi/common.gypi | 371 ++++++++++++++++++++++++++++++++++++
 packages/emnapi/emnapi.gyp  |  50 +++++
 packages/emnapi/index.js    |   4 +-
 3 files changed, 424 insertions(+), 1 deletion(-)
 create mode 100644 packages/emnapi/common.gypi
 create mode 100644 packages/emnapi/emnapi.gyp

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
new file mode 100644
index 0000000..cb9a18b
--- /dev/null
+++ b/packages/emnapi/common.gypi
@@ -0,0 +1,371 @@
+# This file is originally created by [RReverser](https://github.com/RReverser)
+# in https://github.com/lovell/sharp/pull/3522
+{
+  'variables': {
+    # 'emscripten' | 'wasi' | 'unknown'
+    'target_os%': 'emscripten',
+    'napi_build_version%': '8',
+    'clang': 1,
+    'target_arch%': 'wasm32',
+    'wasm_threads%': 0,
+  },
+
+  'target_defaults': {
+    'type': 'executable',
+
+    'defines': [
+      'BUILDING_NODE_EXTENSION',
+      '__STDC_FORMAT_MACROS',
+    ],
+
+    'cflags': [
+      '-Wall',
+      '-Wextra',
+      '-Wno-unused-parameter',
+    ],
+    'cflags_cc': [
+      '-fno-rtti',
+      '-fno-exceptions',
+      '-std=c++17'
+    ],
+
+    'default_configuration': 'Release',
+    'configurations': {
+      'Debug': {
+        'defines': [ 'DEBUG', '_DEBUG' ],
+        'cflags': [ '-g', '-O0' ],
+        'ldflags': [ '-g', '-O0' ],
+        'conditions': [
+          ['OS=="mac"', {
+            'xcode_settings': {
+              'WARNING_CFLAGS': [ '-g', '-O0' ],
+              'OTHER_LDFLAGS': [ '-g', '-O0' ],
+            },
+          }],
+        ],
+      },
+      'Release': {
+        'cflags': [ '-O3' ],
+        'ldflags': [ '-O3' ],
+        'conditions': [
+          ['OS=="mac"', {
+            'xcode_settings': {
+              'WARNING_CFLAGS': [ '-O3' ],
+              'OTHER_LDFLAGS': [ '-O3' ],
+            },
+          }],
+        ],
+      }
+    },
+
+    'include_dirs+': [
+      'include',
+    ],
+
+    'conditions': [
+      ['OS=="mac"', {
+        'xcode_settings': {
+          # WARNING_CFLAGS == cflags
+          # OTHER_CFLAGS == cflags_c
+          # OTHER_CPLUSPLUSFLAGS == cflags_cc
+          # OTHER_LDFLAGS == ldflags
+
+          'CLANG_CXX_LANGUAGE_STANDARD': 'c++17',
+          'GCC_ENABLE_CPP_RTTI': 'NO',
+          'GCC_ENABLE_CPP_EXCEPTIONS': 'NO',
+          'WARNING_CFLAGS': [
+            '-Wall',
+            '-Wextra',
+            '-Wno-unused-parameter',
+          ]
+        },
+      }],
+      ['target_os == "emscripten"', {
+        'defines': [
+          'NAPI_EXTERN=__attribute__((__import_module__(\"env\")))'
+        ],
+
+        'cflags': [
+          '-sDEFAULT_TO_CXX=0',
+        ],
+        'ldflags': [
+          '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+          "-sALLOW_MEMORY_GROWTH=1",
+          "-sEXPORTED_FUNCTIONS=['_malloc','_free','_napi_register_wasm_v1','_node_api_module_get_api_version_v1']",
+          '-sNODEJS_CATCH_EXIT=0',
+          '-sNODEJS_CATCH_REJECTION=0',
+          '-sAUTO_JS_LIBRARIES=0',
+          '-sAUTO_NATIVE_LIBRARIES=0',
+          '-sWASM_BIGINT=1',
+          '-sMIN_CHROME_VERSION=84',
+          '-sSTACK_SIZE=2MB',
+          '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
+        ],
+
+        'configurations': {
+          'Debug': {
+            'ldflags': [ '-sSAFE_HEAP=1' ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [ '-sSAFE_HEAP=1' ],
+                },
+              }],
+            ],
+          }
+        },
+
+        'conditions': [
+          ['OS=="mac"', {
+            'xcode_settings': {
+              'WARNING_CFLAGS': [
+                '-sDEFAULT_TO_CXX=0',
+              ],
+              'OTHER_LDFLAGS': [
+                '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+                "-sALLOW_MEMORY_GROWTH=1",
+                "-sEXPORTED_FUNCTIONS=['_malloc','_free','_napi_register_wasm_v1','_node_api_module_get_api_version_v1']",
+                '-sNODEJS_CATCH_EXIT=0',
+                '-sNODEJS_CATCH_REJECTION=0',
+                '-sAUTO_JS_LIBRARIES=0',
+                '-sAUTO_NATIVE_LIBRARIES=0',
+                '-sWASM_BIGINT=1',
+                '-sMIN_CHROME_VERSION=84',
+                '-sSTACK_SIZE=2MB',
+                '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
+              ],
+            },
+          }],
+          ['target_arch == "wasm64"', {
+            'cflags': [ '-sMEMORY64=1' ],
+            'ldflags': [ '-sMEMORY64=1' ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'WARNING_CFLAGS': [ '-sMEMORY64=1' ],
+                  'OTHER_LDFLAGS': [ '-sMEMORY64=1' ],
+                },
+              }],
+            ],
+          }],
+          ['wasm_threads != 0', {
+            'cflags': [ '-sWASM_WORKERS=1', '-pthread' ],
+            'ldflags': [ '-pthread' ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'WARNING_CFLAGS': [ '-sWASM_WORKERS=1', '-pthread' ],
+                  'OTHER_LDFLAGS': [ '-pthread' ],
+                },
+              }],
+            ],
+          }],
+        ],
+      }, {
+        # not emscripten
+        'configurations': {
+          'Release': {
+            'ldflags': [ '-Wl,--strip-debug' ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [ '-Wl,--strip-debug' ],
+                },
+              }],
+            ],
+          }
+        },
+        
+        'conditions': [
+          ['wasm_threads != 0', {
+            'cflags': [ "-matomics", "-mbulk-memory" ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'WARNING_CFLAGS': [ "-matomics", "-mbulk-memory" ],
+                },
+              }],
+            ],
+          }],
+          ['target_os == "wasi"', {
+            'ldflags': [
+              '-mexec-model=reactor'
+            ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [
+                    '-mexec-model=reactor'
+                  ],
+                },
+              }],
+              ['wasm_threads != 0', {
+                # wasi-threads
+                'cflags': [ '--target=wasm32-wasi-threads', '-pthread' ],
+                'ldflags': [ '--target=wasm32-wasi-threads', '-pthread' ],
+                'conditions': [
+                  ['OS=="mac"', {
+                    'xcode_settings': {
+                      'WARNING_CFLAGS': [ '--target=wasm32-wasi-threads', '-pthread' ],
+                      'OTHER_LDFLAGS': [ '--target=wasm32-wasi-threads', '-pthread' ],
+                    },
+                  }],
+                ]
+              }, {
+                # wasi
+                'cflags': [ '--target=wasm32-wasi' ],
+                'ldflags': [ '--target=wasm32-wasi' ],
+                'conditions': [
+                  ['OS=="mac"', {
+                    'xcode_settings': {
+                      'WARNING_CFLAGS': [ '--target=wasm32-wasi' ],
+                      'OTHER_LDFLAGS': [ '--target=wasm32-wasi' ],
+                    },
+                  }],
+                ]
+              }],
+            ],
+          }, {
+            # wasm32-unknown-unknown
+            'cflags': [ '--target=wasm32-unknown-unknown' ],
+            'ldflags': [
+              '--target=wasm32-unknown-unknown',
+            ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'WARNING_CFLAGS': [ '--target=wasm32-unknown-unknown' ],
+                  'OTHER_LDFLAGS': [
+                    '--target=wasm32-unknown-unknown',
+                  ],
+                },
+              }],
+            ],
+          }],
+        ]
+      }],
+    ],
+
+    'target_conditions': [
+      ['_type=="executable"', {
+        'sources': [
+          '<!@(node -p "require(\'emnapi\').sources.map(x => JSON.stringify(path.relative(process.cwd(), x))).join(\' \')")'
+        ],
+        'conditions': [
+          ['target_os == "emscripten"', {
+            'product_extension': 'js',
+          }, {
+            # not emscripten
+            'product_extension': 'wasm',
+
+            'ldflags': [
+              '-Wl,--export-dynamic',
+              '-Wl,--export=malloc',
+              '-Wl,--export=free',
+              '-Wl,--export=napi_register_wasm_v1',
+              '-Wl,--export-if-defined=node_api_module_get_api_version_v1',
+              '-Wl,--import-undefined',
+              '-Wl,--export-table',
+            ],
+
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [
+                    '-Wl,--export-dynamic',
+                    '-Wl,--export=malloc',
+                    '-Wl,--export=free',
+                    '-Wl,--export=napi_register_wasm_v1',
+                    '-Wl,--export-if-defined=node_api_module_get_api_version_v1',
+                    '-Wl,--import-undefined',
+                    '-Wl,--export-table',
+                  ],
+                },
+              }],
+              ['wasm_threads != 0', {
+                'ldflags': [
+                  '-Wl,--import-memory',
+                  '-Wl,--shared-memory',
+                  '-Wl,--max-memory=2147483648',
+                ],
+                'conditions': [
+                  ['OS=="mac"', {
+                    'xcode_settings': {
+                      'OTHER_LDFLAGS': [
+                        '-Wl,--import-memory',
+                        '-Wl,--shared-memory',
+                        '-Wl,--max-memory=2147483648',
+                      ]
+                    },
+                  }],
+                ],
+              }, {
+                'ldflags': [
+                  '-Wl,--initial-memory=16777216'
+                ],
+                'conditions': [
+                  ['OS=="mac"', {
+                    'xcode_settings': {
+                      'OTHER_LDFLAGS': [
+                        '-Wl,--initial-memory=16777216'
+                      ]
+                    },
+                  }],
+                ],
+              }],
+              ['target_os == "wasi"', {}, {
+                'defines': [
+                  'PAGESIZE=65536'
+                ],
+                'ldflags': [
+                  '-nostdlib',
+                  '-Wl,--no-entry',
+                ],
+                'sources': [
+                  'src/malloc/sbrk.c',
+                  'src/malloc/memcpy.c',
+                  'src/malloc/memset.c',
+                  'src/malloc/dlmalloc/dlmalloc.c',
+                ],
+                'conditions': [
+                  ['OS=="mac"', {
+                    'xcode_settings': {
+                      'OTHER_LDFLAGS': [
+                        '-nostdlib',
+                        '-Wl,--no-entry',
+                      ],
+                    },
+                  }],
+                  ['wasm_threads != 0', {
+                    # wasm32 + threads
+                    'sources': [
+                      'src/thread/async_worker_create.c',
+                      'src/thread/async_worker_init.S',
+                    ],
+                    'defines': [
+                      'USE_LOCKS=1'
+                    ],
+                    'ldflags': [
+                      '-Wl,--export=emnapi_async_worker_create',
+                      '-Wl,--export=emnapi_async_worker_init',
+                    ],
+                    'conditions': [
+                      ['OS=="mac"', {
+                        'xcode_settings': {
+                          'OTHER_LDFLAGS': [
+                            '-Wl,--export=emnapi_async_worker_create',
+                            '-Wl,--export=emnapi_async_worker_init',
+                          ],
+                        },
+                      }],
+                    ],
+                  }],
+                ]
+              }],
+            ]
+          }]
+        ],
+      }],
+    ],
+  }
+}
diff --git a/packages/emnapi/emnapi.gyp b/packages/emnapi/emnapi.gyp
new file mode 100644
index 0000000..4a97350
--- /dev/null
+++ b/packages/emnapi/emnapi.gyp
@@ -0,0 +1,50 @@
+{
+  'targets': [
+    {
+      'target_name': 'dlmalloc',
+      'type': 'static_library',
+      'defines': [
+        'PAGESIZE=65536'
+      ],
+      'sources': [
+        'src/malloc/sbrk.c',
+        'src/malloc/memcpy.c',
+        'src/malloc/memset.c',
+        'src/malloc/dlmalloc/dlmalloc.c',
+      ],
+      'conditions': [
+        ['wasm_threads != 0', {
+          'defines': [
+            'USE_LOCKS=1'
+          ],
+        }],
+      ],
+    },
+    {
+      'target_name': 'emmalloc',
+      'type': 'static_library',
+      'defines': [
+        'PAGESIZE=65536'
+      ],
+      'sources': [
+        'src/malloc/sbrk.c',
+        'src/malloc/memcpy.c',
+        'src/malloc/memset.c',
+        'src/malloc/emmalloc/emmalloc.c',
+      ],
+      'cflags': [ '-fno-strict-aliasing' ],
+      'conditions': [
+        ['OS == "mac"', {
+          'xcode_settings': {
+            'GCC_STRICT_ALIASING': 'NO',
+          }
+        }],
+        ['wasm_threads != 0', {
+          'defines': [
+            '__EMSCRIPTEN_SHARED_MEMORY__=1'
+          ],
+        }],
+      ],
+    }
+  ]
+}
diff --git a/packages/emnapi/index.js b/packages/emnapi/index.js
index 05424c6..2eb2bdb 100644
--- a/packages/emnapi/index.js
+++ b/packages/emnapi/index.js
@@ -5,7 +5,7 @@ const path = require('path')
 
 const include = path.join(__dirname, 'include')
 const includeDir = path.relative(process.cwd(), include)
-const jsLibrary = path.join(__dirname, './dist/library_napi.js')
+const jsLibrary = path.join(__dirname, './dist/library_napi.js').replace(/\\|\\\\/g, '/')
 const sources = [
   path.join(__dirname, './src/js_native_api.c'),
   path.join(__dirname, './src/node_api.c'),
@@ -20,8 +20,10 @@ const sources = [
   path.join(__dirname, './src/uv/unix/async.c'),
   path.join(__dirname, './src/uv/unix/core.c')
 ]
+const targets = path.relative(process.cwd(), path.join(__dirname, 'emnapi.gyp'))
 
 exports.include = include
 exports.include_dir = includeDir
 exports.js_library = jsLibrary
 exports.sources = sources
+exports.targets = targets

From b7286b9409f3231701a778b1d108fb03f61ba161 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Fri, 19 Jan 2024 00:09:25 +0800
Subject: [PATCH 02/12] napi_build_version 9

---
 packages/emnapi/common.gypi | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
index cb9a18b..3463c5c 100644
--- a/packages/emnapi/common.gypi
+++ b/packages/emnapi/common.gypi
@@ -4,7 +4,7 @@
   'variables': {
     # 'emscripten' | 'wasi' | 'unknown'
     'target_os%': 'emscripten',
-    'napi_build_version%': '8',
+    'napi_build_version%': '9',
     'clang': 1,
     'target_arch%': 'wasm32',
     'wasm_threads%': 0,

From f53d8229024409daf81c2593c76a5a62e2e06a5c Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Sat, 20 Jan 2024 11:34:08 +0800
Subject: [PATCH 03/12] update common.gypi

---
 packages/emnapi/common.gypi | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
index 3463c5c..b1f4788 100644
--- a/packages/emnapi/common.gypi
+++ b/packages/emnapi/common.gypi
@@ -89,15 +89,13 @@
           '-sDEFAULT_TO_CXX=0',
         ],
         'ldflags': [
-          '--js-library=<!(node -p "require(\'emnapi\').js_library")',
           "-sALLOW_MEMORY_GROWTH=1",
           "-sEXPORTED_FUNCTIONS=['_malloc','_free','_napi_register_wasm_v1','_node_api_module_get_api_version_v1']",
           '-sNODEJS_CATCH_EXIT=0',
           '-sNODEJS_CATCH_REJECTION=0',
-          '-sAUTO_JS_LIBRARIES=0',
-          '-sAUTO_NATIVE_LIBRARIES=0',
           '-sWASM_BIGINT=1',
           '-sMIN_CHROME_VERSION=84',
+          '-sMIN_NODE_VERSION=161500',
           '-sSTACK_SIZE=2MB',
           '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
         ],
@@ -122,15 +120,13 @@
                 '-sDEFAULT_TO_CXX=0',
               ],
               'OTHER_LDFLAGS': [
-                '--js-library=<!(node -p "require(\'emnapi\').js_library")',
                 "-sALLOW_MEMORY_GROWTH=1",
                 "-sEXPORTED_FUNCTIONS=['_malloc','_free','_napi_register_wasm_v1','_node_api_module_get_api_version_v1']",
                 '-sNODEJS_CATCH_EXIT=0',
                 '-sNODEJS_CATCH_REJECTION=0',
-                '-sAUTO_JS_LIBRARIES=0',
-                '-sAUTO_NATIVE_LIBRARIES=0',
                 '-sWASM_BIGINT=1',
                 '-sMIN_CHROME_VERSION=84',
+                '-sMIN_NODE_VERSION=161500',
                 '-sSTACK_SIZE=2MB',
                 '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
               ],
@@ -254,6 +250,9 @@
         'conditions': [
           ['target_os == "emscripten"', {
             'product_extension': 'js',
+            'libraries': [
+              '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+            ]
           }, {
             # not emscripten
             'product_extension': 'wasm',

From 972a03174759c6deb3b7e2955fa65bb2243e9ce7 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Sat, 20 Jan 2024 11:34:29 +0800
Subject: [PATCH 04/12] add emnapi static library targets

---
 packages/emnapi/emnapi.gyp | 62 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 62 insertions(+)

diff --git a/packages/emnapi/emnapi.gyp b/packages/emnapi/emnapi.gyp
index 4a97350..8af6858 100644
--- a/packages/emnapi/emnapi.gyp
+++ b/packages/emnapi/emnapi.gyp
@@ -45,6 +45,68 @@
           ],
         }],
       ],
+    },
+    {
+      'target_name': 'emnapi_basic',
+      'type': 'static_library',
+      'sources': [
+        'src/js_native_api.c',
+        'src/node_api.c',
+        'src/async_cleanup_hook.c',
+        'src/async_context.c',
+      ],
+      'direct_dependent_settings': {
+        'include_dirs+': [ 'include' ],
+      },
+      'link_settings': {
+        'target_conditions': [
+          ['_type == "executable" and target_os == "emscripten"', {
+            'libraries': [
+              '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+            ]
+          }],
+        ]
+      },
+      'conditions': [
+        ['wasm_threads != 0 and target_os != "emscripten" and target_os != "wasi"', {
+          'sources': [
+            'src/thread/async_worker_create.c',
+            'src/thread/async_worker_init.S',
+          ],
+        }],
+      ]
+    },
+    {
+      'target_name': 'emnapi',
+      'type': 'static_library',
+      'sources': [
+        'src/js_native_api.c',
+        'src/node_api.c',
+        'src/async_cleanup_hook.c',
+        'src/async_context.c',
+
+        'src/uv/uv-common.c',
+        'src/uv/threadpool.c',
+        'src/uv/unix/loop.c',
+        'src/uv/unix/thread.c',
+        'src/uv/unix/async.c',
+        'src/uv/unix/core.c',
+
+        'src/async_work.c',
+        'src/threadsafe_function.c',
+      ],
+      'direct_dependent_settings': {
+        'include_dirs+': [ 'include' ],
+      },
+      'link_settings': {
+        'target_conditions': [
+          ['_type == "executable" and target_os == "emscripten"', {
+            'libraries': [
+              '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+            ]
+          }],
+        ]
+      },
     }
   ]
 }

From 2f8c2c914cbf991832c86823fba6b0ef8b6ca498 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Sat, 20 Jan 2024 13:06:52 +0800
Subject: [PATCH 05/12] product_extension%

---
 packages/emnapi/common.gypi | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
index b1f4788..539c12e 100644
--- a/packages/emnapi/common.gypi
+++ b/packages/emnapi/common.gypi
@@ -249,13 +249,13 @@
         ],
         'conditions': [
           ['target_os == "emscripten"', {
-            'product_extension': 'js',
+            'product_extension%': 'js',
             'libraries': [
               '--js-library=<!(node -p "require(\'emnapi\').js_library")',
             ]
           }, {
             # not emscripten
-            'product_extension': 'wasm',
+            'product_extension%': 'wasm',
 
             'ldflags': [
               '-Wl,--export-dynamic',

From 99690cf7b370264c16f6486a28fa619cfe1ffd24 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Sat, 20 Jan 2024 15:01:02 +0800
Subject: [PATCH 06/12] use OS

---
 packages/emnapi/common.gypi | 318 +++++++++++++++---------------------
 packages/emnapi/emnapi.gyp  |  14 +-
 2 files changed, 138 insertions(+), 194 deletions(-)

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
index 539c12e..c249504 100644
--- a/packages/emnapi/common.gypi
+++ b/packages/emnapi/common.gypi
@@ -2,8 +2,7 @@
 # in https://github.com/lovell/sharp/pull/3522
 {
   'variables': {
-    # 'emscripten' | 'wasi' | 'unknown'
-    'target_os%': 'emscripten',
+    # OS: 'emscripten' | 'wasi' | 'unknown'
     'napi_build_version%': '9',
     'clang': 1,
     'target_arch%': 'wasm32',
@@ -29,32 +28,40 @@
       '-std=c++17'
     ],
 
+    'xcode_settings': {
+      # WARNING_CFLAGS == cflags
+      # OTHER_CFLAGS == cflags_c
+      # OTHER_CPLUSPLUSFLAGS == cflags_cc
+      # OTHER_LDFLAGS == ldflags
+
+      'CLANG_CXX_LANGUAGE_STANDARD': 'c++17',
+      'GCC_ENABLE_CPP_RTTI': 'NO',
+      'GCC_ENABLE_CPP_EXCEPTIONS': 'NO',
+      'WARNING_CFLAGS': [
+        '-Wall',
+        '-Wextra',
+        '-Wno-unused-parameter',
+      ]
+    },
+
     'default_configuration': 'Release',
     'configurations': {
       'Debug': {
         'defines': [ 'DEBUG', '_DEBUG' ],
         'cflags': [ '-g', '-O0' ],
         'ldflags': [ '-g', '-O0' ],
-        'conditions': [
-          ['OS=="mac"', {
-            'xcode_settings': {
-              'WARNING_CFLAGS': [ '-g', '-O0' ],
-              'OTHER_LDFLAGS': [ '-g', '-O0' ],
-            },
-          }],
-        ],
+        'xcode_settings': {
+          'WARNING_CFLAGS': [ '-g', '-O0' ],
+          'OTHER_LDFLAGS': [ '-g', '-O0' ],
+        },
       },
       'Release': {
         'cflags': [ '-O3' ],
         'ldflags': [ '-O3' ],
-        'conditions': [
-          ['OS=="mac"', {
-            'xcode_settings': {
-              'WARNING_CFLAGS': [ '-O3' ],
-              'OTHER_LDFLAGS': [ '-O3' ],
-            },
-          }],
-        ],
+        'xcode_settings': {
+          'WARNING_CFLAGS': [ '-O3' ],
+          'OTHER_LDFLAGS': [ '-O3' ],
+        },
       }
     },
 
@@ -63,24 +70,7 @@
     ],
 
     'conditions': [
-      ['OS=="mac"', {
-        'xcode_settings': {
-          # WARNING_CFLAGS == cflags
-          # OTHER_CFLAGS == cflags_c
-          # OTHER_CPLUSPLUSFLAGS == cflags_cc
-          # OTHER_LDFLAGS == ldflags
-
-          'CLANG_CXX_LANGUAGE_STANDARD': 'c++17',
-          'GCC_ENABLE_CPP_RTTI': 'NO',
-          'GCC_ENABLE_CPP_EXCEPTIONS': 'NO',
-          'WARNING_CFLAGS': [
-            '-Wall',
-            '-Wextra',
-            '-Wno-unused-parameter',
-          ]
-        },
-      }],
-      ['target_os == "emscripten"', {
+      ['OS == "emscripten"', {
         'defines': [
           'NAPI_EXTERN=__attribute__((__import_module__(\"env\")))'
         ],
@@ -99,62 +89,48 @@
           '-sSTACK_SIZE=2MB',
           '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
         ],
+        'xcode_settings': {
+          'WARNING_CFLAGS': [
+            '-sDEFAULT_TO_CXX=0',
+          ],
+          'OTHER_LDFLAGS': [
+            "-sALLOW_MEMORY_GROWTH=1",
+            "-sEXPORTED_FUNCTIONS=['_malloc','_free','_napi_register_wasm_v1','_node_api_module_get_api_version_v1']",
+            '-sNODEJS_CATCH_EXIT=0',
+            '-sNODEJS_CATCH_REJECTION=0',
+            '-sWASM_BIGINT=1',
+            '-sMIN_CHROME_VERSION=84',
+            '-sMIN_NODE_VERSION=161500',
+            '-sSTACK_SIZE=2MB',
+            '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
+          ],
+        },
 
         'configurations': {
           'Debug': {
             'ldflags': [ '-sSAFE_HEAP=1' ],
-            'conditions': [
-              ['OS=="mac"', {
-                'xcode_settings': {
-                  'OTHER_LDFLAGS': [ '-sSAFE_HEAP=1' ],
-                },
-              }],
-            ],
+            'xcode_settings': {
+              'OTHER_LDFLAGS': [ '-sSAFE_HEAP=1' ],
+            },
           }
         },
 
         'conditions': [
-          ['OS=="mac"', {
-            'xcode_settings': {
-              'WARNING_CFLAGS': [
-                '-sDEFAULT_TO_CXX=0',
-              ],
-              'OTHER_LDFLAGS': [
-                "-sALLOW_MEMORY_GROWTH=1",
-                "-sEXPORTED_FUNCTIONS=['_malloc','_free','_napi_register_wasm_v1','_node_api_module_get_api_version_v1']",
-                '-sNODEJS_CATCH_EXIT=0',
-                '-sNODEJS_CATCH_REJECTION=0',
-                '-sWASM_BIGINT=1',
-                '-sMIN_CHROME_VERSION=84',
-                '-sMIN_NODE_VERSION=161500',
-                '-sSTACK_SIZE=2MB',
-                '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
-              ],
-            },
-          }],
           ['target_arch == "wasm64"', {
             'cflags': [ '-sMEMORY64=1' ],
             'ldflags': [ '-sMEMORY64=1' ],
-            'conditions': [
-              ['OS=="mac"', {
-                'xcode_settings': {
-                  'WARNING_CFLAGS': [ '-sMEMORY64=1' ],
-                  'OTHER_LDFLAGS': [ '-sMEMORY64=1' ],
-                },
-              }],
-            ],
+            'xcode_settings': {
+              'WARNING_CFLAGS': [ '-sMEMORY64=1' ],
+              'OTHER_LDFLAGS': [ '-sMEMORY64=1' ],
+            },
           }],
           ['wasm_threads != 0', {
             'cflags': [ '-sWASM_WORKERS=1', '-pthread' ],
             'ldflags': [ '-pthread' ],
-            'conditions': [
-              ['OS=="mac"', {
-                'xcode_settings': {
-                  'WARNING_CFLAGS': [ '-sWASM_WORKERS=1', '-pthread' ],
-                  'OTHER_LDFLAGS': [ '-pthread' ],
-                },
-              }],
-            ],
+            'xcode_settings': {
+              'WARNING_CFLAGS': [ '-sWASM_WORKERS=1', '-pthread' ],
+              'OTHER_LDFLAGS': [ '-pthread' ],
+            },
           }],
         ],
       }, {
@@ -162,80 +138,62 @@
         'configurations': {
           'Release': {
             'ldflags': [ '-Wl,--strip-debug' ],
-            'conditions': [
-              ['OS=="mac"', {
-                'xcode_settings': {
-                  'OTHER_LDFLAGS': [ '-Wl,--strip-debug' ],
-                },
-              }],
-            ],
+            'xcode_settings': {
+              'OTHER_LDFLAGS': [ '-Wl,--strip-debug' ],
+            },
           }
         },
         
         'conditions': [
           ['wasm_threads != 0', {
             'cflags': [ "-matomics", "-mbulk-memory" ],
-            'conditions': [
-              ['OS=="mac"', {
-                'xcode_settings': {
-                  'WARNING_CFLAGS': [ "-matomics", "-mbulk-memory" ],
-                },
-              }],
-            ],
+            'xcode_settings': {
+              'WARNING_CFLAGS': [ "-matomics", "-mbulk-memory" ],
+            },
           }],
-          ['target_os == "wasi"', {
+          ['OS == "wasi"', {
             'ldflags': [
               '-mexec-model=reactor'
             ],
+            'xcode_settings': {
+              'OTHER_LDFLAGS': [
+                '-mexec-model=reactor'
+              ],
+            },
             'conditions': [
-              ['OS=="mac"', {
-                'xcode_settings': {
-                  'OTHER_LDFLAGS': [
-                    '-mexec-model=reactor'
-                  ],
-                },
-              }],
               ['wasm_threads != 0', {
                 # wasi-threads
                 'cflags': [ '--target=wasm32-wasi-threads', '-pthread' ],
                 'ldflags': [ '--target=wasm32-wasi-threads', '-pthread' ],
-                'conditions': [
-                  ['OS=="mac"', {
-                    'xcode_settings': {
-                      'WARNING_CFLAGS': [ '--target=wasm32-wasi-threads', '-pthread' ],
-                      'OTHER_LDFLAGS': [ '--target=wasm32-wasi-threads', '-pthread' ],
-                    },
-                  }],
-                ]
+                'xcode_settings': {
+                  'WARNING_CFLAGS': [ '--target=wasm32-wasi-threads', '-pthread' ],
+                  'OTHER_LDFLAGS': [ '--target=wasm32-wasi-threads', '-pthread' ],
+                },
               }, {
                 # wasi
                 'cflags': [ '--target=wasm32-wasi' ],
                 'ldflags': [ '--target=wasm32-wasi' ],
-                'conditions': [
-                  ['OS=="mac"', {
-                    'xcode_settings': {
-                      'WARNING_CFLAGS': [ '--target=wasm32-wasi' ],
-                      'OTHER_LDFLAGS': [ '--target=wasm32-wasi' ],
-                    },
-                  }],
-                ]
+                'xcode_settings': {
+                  'WARNING_CFLAGS': [ '--target=wasm32-wasi' ],
+                  'OTHER_LDFLAGS': [ '--target=wasm32-wasi' ],
+                },
               }],
             ],
           }, {
-            # wasm32-unknown-unknown
-            'cflags': [ '--target=wasm32-unknown-unknown' ],
-            'ldflags': [
-              '--target=wasm32-unknown-unknown',
-            ],
             'conditions': [
-              ['OS=="mac"', {
+              ['OS == "unknown"', {
+                # wasm32-unknown-unknown
+                'cflags': [ '--target=wasm32-unknown-unknown' ],
+                'ldflags': [
+                  '--target=wasm32-unknown-unknown',
+                ],
                 'xcode_settings': {
                   'WARNING_CFLAGS': [ '--target=wasm32-unknown-unknown' ],
                   'OTHER_LDFLAGS': [
                     '--target=wasm32-unknown-unknown',
                   ],
                 },
-              }],
+              }]
             ],
           }],
         ]
@@ -248,7 +206,7 @@
           '<!@(node -p "require(\'emnapi\').sources.map(x => JSON.stringify(path.relative(process.cwd(), x))).join(\' \')")'
         ],
         'conditions': [
-          ['target_os == "emscripten"', {
+          ['OS == "emscripten"', {
             'product_extension%': 'js',
             'libraries': [
               '--js-library=<!(node -p "require(\'emnapi\').js_library")',
@@ -266,90 +224,78 @@
               '-Wl,--import-undefined',
               '-Wl,--export-table',
             ],
+            'xcode_settings': {
+              'OTHER_LDFLAGS': [
+                '-Wl,--export-dynamic',
+                '-Wl,--export=malloc',
+                '-Wl,--export=free',
+                '-Wl,--export=napi_register_wasm_v1',
+                '-Wl,--export-if-defined=node_api_module_get_api_version_v1',
+                '-Wl,--import-undefined',
+                '-Wl,--export-table',
+              ],
+            },
 
             'conditions': [
-              ['OS=="mac"', {
-                'xcode_settings': {
-                  'OTHER_LDFLAGS': [
-                    '-Wl,--export-dynamic',
-                    '-Wl,--export=malloc',
-                    '-Wl,--export=free',
-                    '-Wl,--export=napi_register_wasm_v1',
-                    '-Wl,--export-if-defined=node_api_module_get_api_version_v1',
-                    '-Wl,--import-undefined',
-                    '-Wl,--export-table',
-                  ],
-                },
-              }],
               ['wasm_threads != 0', {
                 'ldflags': [
                   '-Wl,--import-memory',
                   '-Wl,--shared-memory',
                   '-Wl,--max-memory=2147483648',
                 ],
-                'conditions': [
-                  ['OS=="mac"', {
-                    'xcode_settings': {
-                      'OTHER_LDFLAGS': [
-                        '-Wl,--import-memory',
-                        '-Wl,--shared-memory',
-                        '-Wl,--max-memory=2147483648',
-                      ]
-                    },
-                  }],
-                ],
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [
+                    '-Wl,--import-memory',
+                    '-Wl,--shared-memory',
+                    '-Wl,--max-memory=2147483648',
+                  ]
+                },
               }, {
                 'ldflags': [
                   '-Wl,--initial-memory=16777216'
                 ],
-                'conditions': [
-                  ['OS=="mac"', {
-                    'xcode_settings': {
-                      'OTHER_LDFLAGS': [
-                        '-Wl,--initial-memory=16777216'
-                      ]
-                    },
-                  }],
-                ],
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [
+                    '-Wl,--initial-memory=16777216'
+                  ]
+                },
               }],
-              ['target_os == "wasi"', {}, {
-                'defines': [
-                  'PAGESIZE=65536'
-                ],
-                'ldflags': [
-                  '-nostdlib',
-                  '-Wl,--no-entry',
-                ],
-                'sources': [
-                  'src/malloc/sbrk.c',
-                  'src/malloc/memcpy.c',
-                  'src/malloc/memset.c',
-                  'src/malloc/dlmalloc/dlmalloc.c',
-                ],
+              ['OS == "wasi"', {}, {
                 'conditions': [
-                  ['OS=="mac"', {
+                  ['OS == "unknown"', {
+                    'defines': [
+                      'PAGESIZE=65536'
+                    ],
+                    'ldflags': [
+                      '-nostdlib',
+                      '-Wl,--no-entry',
+                    ],
                     'xcode_settings': {
                       'OTHER_LDFLAGS': [
                         '-nostdlib',
                         '-Wl,--no-entry',
                       ],
                     },
-                  }],
-                  ['wasm_threads != 0', {
-                    # wasm32 + threads
                     'sources': [
-                      'src/thread/async_worker_create.c',
-                      'src/thread/async_worker_init.S',
-                    ],
-                    'defines': [
-                      'USE_LOCKS=1'
-                    ],
-                    'ldflags': [
-                      '-Wl,--export=emnapi_async_worker_create',
-                      '-Wl,--export=emnapi_async_worker_init',
+                      'src/malloc/sbrk.c',
+                      'src/malloc/memcpy.c',
+                      'src/malloc/memset.c',
+                      'src/malloc/dlmalloc/dlmalloc.c',
                     ],
                     'conditions': [
-                      ['OS=="mac"', {
+                      ['wasm_threads != 0', {
+                        # wasm32 + threads
+                        'sources': [
+                          'src/thread/async_worker_create.c',
+                          'src/thread/async_worker_init.S',
+                        ],
+                        'defines': [
+                          'USE_LOCKS=1'
+                        ],
+                        'ldflags': [
+                          '-Wl,--export=emnapi_async_worker_create',
+                          '-Wl,--export=emnapi_async_worker_init',
+                        ],
                         'xcode_settings': {
                           'OTHER_LDFLAGS': [
                             '-Wl,--export=emnapi_async_worker_create',
@@ -357,8 +303,8 @@
                           ],
                         },
                       }],
-                    ],
-                  }],
+                    ]
+                  }]
                 ]
               }],
             ]
diff --git a/packages/emnapi/emnapi.gyp b/packages/emnapi/emnapi.gyp
index 8af6858..fccb3fd 100644
--- a/packages/emnapi/emnapi.gyp
+++ b/packages/emnapi/emnapi.gyp
@@ -33,12 +33,10 @@
         'src/malloc/emmalloc/emmalloc.c',
       ],
       'cflags': [ '-fno-strict-aliasing' ],
+      'xcode_settings': {
+        'GCC_STRICT_ALIASING': 'NO',
+      },
       'conditions': [
-        ['OS == "mac"', {
-          'xcode_settings': {
-            'GCC_STRICT_ALIASING': 'NO',
-          }
-        }],
         ['wasm_threads != 0', {
           'defines': [
             '__EMSCRIPTEN_SHARED_MEMORY__=1'
@@ -60,7 +58,7 @@
       },
       'link_settings': {
         'target_conditions': [
-          ['_type == "executable" and target_os == "emscripten"', {
+          ['_type == "executable" and OS == "emscripten"', {
             'libraries': [
               '--js-library=<!(node -p "require(\'emnapi\').js_library")',
             ]
@@ -68,7 +66,7 @@
         ]
       },
       'conditions': [
-        ['wasm_threads != 0 and target_os != "emscripten" and target_os != "wasi"', {
+        ['wasm_threads != 0 and OS != "emscripten" and OS != "wasi"', {
           'sources': [
             'src/thread/async_worker_create.c',
             'src/thread/async_worker_init.S',
@@ -100,7 +98,7 @@
       },
       'link_settings': {
         'target_conditions': [
-          ['_type == "executable" and target_os == "emscripten"', {
+          ['_type == "executable" and OS == "emscripten"', {
             'libraries': [
               '--js-library=<!(node -p "require(\'emnapi\').js_library")',
             ]

From 3cb08236ac8ae3e45edb31de955905fdaf3c5260 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Sat, 20 Jan 2024 19:38:57 +0800
Subject: [PATCH 07/12] Revert "product_extension%"

This reverts commit 2f8c2c914cbf991832c86823fba6b0ef8b6ca498.
---
 packages/emnapi/common.gypi | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
index c249504..092b9f0 100644
--- a/packages/emnapi/common.gypi
+++ b/packages/emnapi/common.gypi
@@ -207,13 +207,13 @@
         ],
         'conditions': [
           ['OS == "emscripten"', {
-            'product_extension%': 'js',
+            'product_extension': 'js',
             'libraries': [
               '--js-library=<!(node -p "require(\'emnapi\').js_library")',
             ]
           }, {
             # not emscripten
-            'product_extension%': 'wasm',
+            'product_extension': 'wasm',
 
             'ldflags': [
               '-Wl,--export-dynamic',

From df5d2a56cf499f6f4802f412ba727f844b937071 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Tue, 23 Jan 2024 21:56:18 +0800
Subject: [PATCH 08/12] add config.gypi

---
 packages/emnapi/include/node/config.gypi | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 packages/emnapi/include/node/config.gypi

diff --git a/packages/emnapi/include/node/config.gypi b/packages/emnapi/include/node/config.gypi
new file mode 100644
index 0000000..c363c3a
--- /dev/null
+++ b/packages/emnapi/include/node/config.gypi
@@ -0,0 +1,5 @@
+{
+  'variables': {
+    'napi_build_version': '9'
+  }
+}

From b830729e03a588e907a858639879b13332750825 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Tue, 23 Jan 2024 21:58:30 +0800
Subject: [PATCH 09/12] no require in gyp

---
 packages/emnapi/common.gypi | 21 ++++++++++++++++-----
 packages/emnapi/emnapi.gyp  |  3 ++-
 2 files changed, 18 insertions(+), 6 deletions(-)

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
index 092b9f0..1fcfe6a 100644
--- a/packages/emnapi/common.gypi
+++ b/packages/emnapi/common.gypi
@@ -3,7 +3,6 @@
 {
   'variables': {
     # OS: 'emscripten' | 'wasi' | 'unknown'
-    'napi_build_version%': '9',
     'clang': 1,
     'target_arch%': 'wasm32',
     'wasm_threads%': 0,
@@ -181,7 +180,7 @@
             ],
           }, {
             'conditions': [
-              ['OS == "unknown"', {
+              ['OS == "unknown" or OS == ""', {
                 # wasm32-unknown-unknown
                 'cflags': [ '--target=wasm32-unknown-unknown' ],
                 'ldflags': [
@@ -203,13 +202,25 @@
     'target_conditions': [
       ['_type=="executable"', {
         'sources': [
-          '<!@(node -p "require(\'emnapi\').sources.map(x => JSON.stringify(path.relative(process.cwd(), x))).join(\' \')")'
+          'src/js_native_api.c',
+          'src/node_api.c',
+          'src/async_cleanup_hook.c',
+          'src/async_context.c',
+          'src/async_work.c',
+          'src/threadsafe_function.c',
+          'src/uv/uv-common.c',
+          'src/uv/threadpool.c',
+          'src/uv/unix/loop.c',
+          'src/uv/unix/thread.c',
+          'src/uv/unix/async.c',
+          'src/uv/unix/core.c',
         ],
         'conditions': [
           ['OS == "emscripten"', {
             'product_extension': 'js',
             'libraries': [
-              '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+              # '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+              '--js-library=<(node_root_dir)/dist/library_napi.js',
             ]
           }, {
             # not emscripten
@@ -262,7 +273,7 @@
               }],
               ['OS == "wasi"', {}, {
                 'conditions': [
-                  ['OS == "unknown"', {
+                  ['OS == "unknown" or OS == ""', {
                     'defines': [
                       'PAGESIZE=65536'
                     ],
diff --git a/packages/emnapi/emnapi.gyp b/packages/emnapi/emnapi.gyp
index fccb3fd..d7b13c4 100644
--- a/packages/emnapi/emnapi.gyp
+++ b/packages/emnapi/emnapi.gyp
@@ -100,7 +100,8 @@
         'target_conditions': [
           ['_type == "executable" and OS == "emscripten"', {
             'libraries': [
-              '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+              # '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+              '--js-library=<(node_root_dir)/dist/library_napi.js',
             ]
           }],
         ]

From e30ae4cf918be72b0521956c4eae0167ddcf2faf Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Tue, 23 Jan 2024 21:59:32 +0800
Subject: [PATCH 10/12] align directory structure

---
 packages/emnapi/CMakeLists.txt | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/packages/emnapi/CMakeLists.txt b/packages/emnapi/CMakeLists.txt
index 9b6de68..5c09e4a 100644
--- a/packages/emnapi/CMakeLists.txt
+++ b/packages/emnapi/CMakeLists.txt
@@ -208,6 +208,11 @@ if(LIB_ARCH)
   endif()
 endif()
 
+install(FILES
+    ${CMAKE_CURRENT_SOURCE_DIR}/common.gypi
+    ${CMAKE_CURRENT_SOURCE_DIR}/emnapi.gyp
+  DESTINATION ".")
+
 install(FILES
     ${CMAKE_CURRENT_SOURCE_DIR}/include/emnapi_common.h
     ${CMAKE_CURRENT_SOURCE_DIR}/include/emnapi.h
@@ -216,11 +221,12 @@ install(FILES
     ${CMAKE_CURRENT_SOURCE_DIR}/include/node_api_types.h
     ${CMAKE_CURRENT_SOURCE_DIR}/include/node_api.h
     ${CMAKE_CURRENT_SOURCE_DIR}/include/uv.h
-  DESTINATION "include/${PROJECT_NAME}")
+    ${CMAKE_CURRENT_SOURCE_DIR}/include/node/config.gypi
+  DESTINATION "include/node")
 
 install(DIRECTORY
   ${CMAKE_CURRENT_SOURCE_DIR}/include/uv
-  DESTINATION "include/${PROJECT_NAME}")
+  DESTINATION "include/node")
 
 install(FILES
     ${CMAKE_CURRENT_SOURCE_DIR}/dist/library_napi.js
@@ -230,14 +236,14 @@ if(EMNAPI_INSTALL_SRC)
   install(FILES
       ${EMNAPI_SRC}
       "${CMAKE_CURRENT_SOURCE_DIR}/src/emnapi_internal.h"
-    DESTINATION "src/${PROJECT_NAME}")
+    DESTINATION "src")
   install(DIRECTORY
     ${CMAKE_CURRENT_SOURCE_DIR}/src/uv
-    DESTINATION "src/${PROJECT_NAME}")
+    DESTINATION "src")
   install(DIRECTORY
     ${CMAKE_CURRENT_SOURCE_DIR}/src/malloc
-    DESTINATION "src/${PROJECT_NAME}")
+    DESTINATION "src")
   install(DIRECTORY
     ${CMAKE_CURRENT_SOURCE_DIR}/src/thread
-    DESTINATION "src/${PROJECT_NAME}")
+    DESTINATION "src")
 endif()

From 59e07a3b46af0072cc9465be0c2b0eda37e5502c Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Tue, 23 Jan 2024 22:44:30 +0800
Subject: [PATCH 11/12] revert

---
 packages/emnapi/common.gypi | 4 ++--
 packages/emnapi/emnapi.gyp  | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
index 1fcfe6a..4652363 100644
--- a/packages/emnapi/common.gypi
+++ b/packages/emnapi/common.gypi
@@ -219,8 +219,8 @@
           ['OS == "emscripten"', {
             'product_extension': 'js',
             'libraries': [
-              # '--js-library=<!(node -p "require(\'emnapi\').js_library")',
-              '--js-library=<(node_root_dir)/dist/library_napi.js',
+              '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+              # '--js-library=<(node_root_dir)/dist/library_napi.js',
             ]
           }, {
             # not emscripten
diff --git a/packages/emnapi/emnapi.gyp b/packages/emnapi/emnapi.gyp
index d7b13c4..f40fb58 100644
--- a/packages/emnapi/emnapi.gyp
+++ b/packages/emnapi/emnapi.gyp
@@ -100,8 +100,8 @@
         'target_conditions': [
           ['_type == "executable" and OS == "emscripten"', {
             'libraries': [
-              # '--js-library=<!(node -p "require(\'emnapi\').js_library")',
-              '--js-library=<(node_root_dir)/dist/library_napi.js',
+              '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+              # '--js-library=<(node_root_dir)/dist/library_napi.js',
             ]
           }],
         ]

From 9c99d454eb9498d36de808a6aa22fbeab50c2707 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Wed, 24 Jan 2024 20:52:23 +0800
Subject: [PATCH 12/12] specify `product_extension` explicitly on emscripten

---
 packages/emnapi/common.gypi | 103 ++++++++++++++++--------------------
 1 file changed, 47 insertions(+), 56 deletions(-)

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
index 4652363..55b5655 100644
--- a/packages/emnapi/common.gypi
+++ b/packages/emnapi/common.gypi
@@ -132,8 +132,8 @@
             },
           }],
         ],
-      }, {
-        # not emscripten
+      }], 
+      ['OS == "" or OS == "wasi" or OS == "unknown"', {
         'configurations': {
           'Release': {
             'ldflags': [ '-Wl,--strip-debug' ],
@@ -142,7 +142,7 @@
             },
           }
         },
-        
+
         'conditions': [
           ['wasm_threads != 0', {
             'cflags': [ "-matomics", "-mbulk-memory" ],
@@ -179,21 +179,17 @@
               }],
             ],
           }, {
-            'conditions': [
-              ['OS == "unknown" or OS == ""', {
-                # wasm32-unknown-unknown
-                'cflags': [ '--target=wasm32-unknown-unknown' ],
-                'ldflags': [
-                  '--target=wasm32-unknown-unknown',
-                ],
-                'xcode_settings': {
-                  'WARNING_CFLAGS': [ '--target=wasm32-unknown-unknown' ],
-                  'OTHER_LDFLAGS': [
-                    '--target=wasm32-unknown-unknown',
-                  ],
-                },
-              }]
+            # wasm32-unknown-unknown
+            'cflags': [ '--target=wasm32-unknown-unknown' ],
+            'ldflags': [
+              '--target=wasm32-unknown-unknown',
             ],
+            'xcode_settings': {
+              'WARNING_CFLAGS': [ '--target=wasm32-unknown-unknown' ],
+              'OTHER_LDFLAGS': [
+                '--target=wasm32-unknown-unknown',
+              ],
+            },
           }],
         ]
       }],
@@ -217,13 +213,12 @@
         ],
         'conditions': [
           ['OS == "emscripten"', {
-            'product_extension': 'js',
             'libraries': [
               '--js-library=<!(node -p "require(\'emnapi\').js_library")',
               # '--js-library=<(node_root_dir)/dist/library_napi.js',
             ]
-          }, {
-            # not emscripten
+          }],
+          ['OS == "" or OS == "wasi" or OS == "unknown"', {
             'product_extension': 'wasm',
 
             'ldflags': [
@@ -271,51 +266,47 @@
                   ]
                 },
               }],
-              ['OS == "wasi"', {}, {
+              ['OS != "wasi"', {
+                'defines': [
+                  'PAGESIZE=65536'
+                ],
+                'ldflags': [
+                  '-nostdlib',
+                  '-Wl,--no-entry',
+                ],
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [
+                    '-nostdlib',
+                    '-Wl,--no-entry',
+                  ],
+                },
+                'sources': [
+                  'src/malloc/sbrk.c',
+                  'src/malloc/memcpy.c',
+                  'src/malloc/memset.c',
+                  'src/malloc/dlmalloc/dlmalloc.c',
+                ],
                 'conditions': [
-                  ['OS == "unknown" or OS == ""', {
+                  ['wasm_threads != 0', {
+                    # wasm32 + threads
+                    'sources': [
+                      'src/thread/async_worker_create.c',
+                      'src/thread/async_worker_init.S',
+                    ],
                     'defines': [
-                      'PAGESIZE=65536'
+                      'USE_LOCKS=1'
                     ],
                     'ldflags': [
-                      '-nostdlib',
-                      '-Wl,--no-entry',
+                      '-Wl,--export=emnapi_async_worker_create',
+                      '-Wl,--export=emnapi_async_worker_init',
                     ],
                     'xcode_settings': {
                       'OTHER_LDFLAGS': [
-                        '-nostdlib',
-                        '-Wl,--no-entry',
+                        '-Wl,--export=emnapi_async_worker_create',
+                        '-Wl,--export=emnapi_async_worker_init',
                       ],
                     },
-                    'sources': [
-                      'src/malloc/sbrk.c',
-                      'src/malloc/memcpy.c',
-                      'src/malloc/memset.c',
-                      'src/malloc/dlmalloc/dlmalloc.c',
-                    ],
-                    'conditions': [
-                      ['wasm_threads != 0', {
-                        # wasm32 + threads
-                        'sources': [
-                          'src/thread/async_worker_create.c',
-                          'src/thread/async_worker_init.S',
-                        ],
-                        'defines': [
-                          'USE_LOCKS=1'
-                        ],
-                        'ldflags': [
-                          '-Wl,--export=emnapi_async_worker_create',
-                          '-Wl,--export=emnapi_async_worker_init',
-                        ],
-                        'xcode_settings': {
-                          'OTHER_LDFLAGS': [
-                            '-Wl,--export=emnapi_async_worker_create',
-                            '-Wl,--export=emnapi_async_worker_init',
-                          ],
-                        },
-                      }],
-                    ]
-                  }]
+                  }],
                 ]
               }],
             ]
