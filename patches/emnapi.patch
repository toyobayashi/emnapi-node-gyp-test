From be4c08f356e11b3cf87a285dec34325832497d60 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Thu, 18 Jan 2024 23:07:20 +0800
Subject: [PATCH 1/4] feat: add basic gyp support

---
 packages/emnapi/common.gypi | 371 ++++++++++++++++++++++++++++++++++++
 packages/emnapi/emnapi.gyp  |  50 +++++
 packages/emnapi/index.js    |   4 +-
 3 files changed, 424 insertions(+), 1 deletion(-)
 create mode 100644 packages/emnapi/common.gypi
 create mode 100644 packages/emnapi/emnapi.gyp

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
new file mode 100644
index 0000000..cb9a18b
--- /dev/null
+++ b/packages/emnapi/common.gypi
@@ -0,0 +1,371 @@
+# This file is originally created by [RReverser](https://github.com/RReverser)
+# in https://github.com/lovell/sharp/pull/3522
+{
+  'variables': {
+    # 'emscripten' | 'wasi' | 'unknown'
+    'target_os%': 'emscripten',
+    'napi_build_version%': '8',
+    'clang': 1,
+    'target_arch%': 'wasm32',
+    'wasm_threads%': 0,
+  },
+
+  'target_defaults': {
+    'type': 'executable',
+
+    'defines': [
+      'BUILDING_NODE_EXTENSION',
+      '__STDC_FORMAT_MACROS',
+    ],
+
+    'cflags': [
+      '-Wall',
+      '-Wextra',
+      '-Wno-unused-parameter',
+    ],
+    'cflags_cc': [
+      '-fno-rtti',
+      '-fno-exceptions',
+      '-std=c++17'
+    ],
+
+    'default_configuration': 'Release',
+    'configurations': {
+      'Debug': {
+        'defines': [ 'DEBUG', '_DEBUG' ],
+        'cflags': [ '-g', '-O0' ],
+        'ldflags': [ '-g', '-O0' ],
+        'conditions': [
+          ['OS=="mac"', {
+            'xcode_settings': {
+              'WARNING_CFLAGS': [ '-g', '-O0' ],
+              'OTHER_LDFLAGS': [ '-g', '-O0' ],
+            },
+          }],
+        ],
+      },
+      'Release': {
+        'cflags': [ '-O3' ],
+        'ldflags': [ '-O3' ],
+        'conditions': [
+          ['OS=="mac"', {
+            'xcode_settings': {
+              'WARNING_CFLAGS': [ '-O3' ],
+              'OTHER_LDFLAGS': [ '-O3' ],
+            },
+          }],
+        ],
+      }
+    },
+
+    'include_dirs+': [
+      'include',
+    ],
+
+    'conditions': [
+      ['OS=="mac"', {
+        'xcode_settings': {
+          # WARNING_CFLAGS == cflags
+          # OTHER_CFLAGS == cflags_c
+          # OTHER_CPLUSPLUSFLAGS == cflags_cc
+          # OTHER_LDFLAGS == ldflags
+
+          'CLANG_CXX_LANGUAGE_STANDARD': 'c++17',
+          'GCC_ENABLE_CPP_RTTI': 'NO',
+          'GCC_ENABLE_CPP_EXCEPTIONS': 'NO',
+          'WARNING_CFLAGS': [
+            '-Wall',
+            '-Wextra',
+            '-Wno-unused-parameter',
+          ]
+        },
+      }],
+      ['target_os == "emscripten"', {
+        'defines': [
+          'NAPI_EXTERN=__attribute__((__import_module__(\"env\")))'
+        ],
+
+        'cflags': [
+          '-sDEFAULT_TO_CXX=0',
+        ],
+        'ldflags': [
+          '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+          "-sALLOW_MEMORY_GROWTH=1",
+          "-sEXPORTED_FUNCTIONS=['_malloc','_free','_napi_register_wasm_v1','_node_api_module_get_api_version_v1']",
+          '-sNODEJS_CATCH_EXIT=0',
+          '-sNODEJS_CATCH_REJECTION=0',
+          '-sAUTO_JS_LIBRARIES=0',
+          '-sAUTO_NATIVE_LIBRARIES=0',
+          '-sWASM_BIGINT=1',
+          '-sMIN_CHROME_VERSION=84',
+          '-sSTACK_SIZE=2MB',
+          '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
+        ],
+
+        'configurations': {
+          'Debug': {
+            'ldflags': [ '-sSAFE_HEAP=1' ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [ '-sSAFE_HEAP=1' ],
+                },
+              }],
+            ],
+          }
+        },
+
+        'conditions': [
+          ['OS=="mac"', {
+            'xcode_settings': {
+              'WARNING_CFLAGS': [
+                '-sDEFAULT_TO_CXX=0',
+              ],
+              'OTHER_LDFLAGS': [
+                '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+                "-sALLOW_MEMORY_GROWTH=1",
+                "-sEXPORTED_FUNCTIONS=['_malloc','_free','_napi_register_wasm_v1','_node_api_module_get_api_version_v1']",
+                '-sNODEJS_CATCH_EXIT=0',
+                '-sNODEJS_CATCH_REJECTION=0',
+                '-sAUTO_JS_LIBRARIES=0',
+                '-sAUTO_NATIVE_LIBRARIES=0',
+                '-sWASM_BIGINT=1',
+                '-sMIN_CHROME_VERSION=84',
+                '-sSTACK_SIZE=2MB',
+                '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
+              ],
+            },
+          }],
+          ['target_arch == "wasm64"', {
+            'cflags': [ '-sMEMORY64=1' ],
+            'ldflags': [ '-sMEMORY64=1' ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'WARNING_CFLAGS': [ '-sMEMORY64=1' ],
+                  'OTHER_LDFLAGS': [ '-sMEMORY64=1' ],
+                },
+              }],
+            ],
+          }],
+          ['wasm_threads != 0', {
+            'cflags': [ '-sWASM_WORKERS=1', '-pthread' ],
+            'ldflags': [ '-pthread' ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'WARNING_CFLAGS': [ '-sWASM_WORKERS=1', '-pthread' ],
+                  'OTHER_LDFLAGS': [ '-pthread' ],
+                },
+              }],
+            ],
+          }],
+        ],
+      }, {
+        # not emscripten
+        'configurations': {
+          'Release': {
+            'ldflags': [ '-Wl,--strip-debug' ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [ '-Wl,--strip-debug' ],
+                },
+              }],
+            ],
+          }
+        },
+        
+        'conditions': [
+          ['wasm_threads != 0', {
+            'cflags': [ "-matomics", "-mbulk-memory" ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'WARNING_CFLAGS': [ "-matomics", "-mbulk-memory" ],
+                },
+              }],
+            ],
+          }],
+          ['target_os == "wasi"', {
+            'ldflags': [
+              '-mexec-model=reactor'
+            ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [
+                    '-mexec-model=reactor'
+                  ],
+                },
+              }],
+              ['wasm_threads != 0', {
+                # wasi-threads
+                'cflags': [ '--target=wasm32-wasi-threads', '-pthread' ],
+                'ldflags': [ '--target=wasm32-wasi-threads', '-pthread' ],
+                'conditions': [
+                  ['OS=="mac"', {
+                    'xcode_settings': {
+                      'WARNING_CFLAGS': [ '--target=wasm32-wasi-threads', '-pthread' ],
+                      'OTHER_LDFLAGS': [ '--target=wasm32-wasi-threads', '-pthread' ],
+                    },
+                  }],
+                ]
+              }, {
+                # wasi
+                'cflags': [ '--target=wasm32-wasi' ],
+                'ldflags': [ '--target=wasm32-wasi' ],
+                'conditions': [
+                  ['OS=="mac"', {
+                    'xcode_settings': {
+                      'WARNING_CFLAGS': [ '--target=wasm32-wasi' ],
+                      'OTHER_LDFLAGS': [ '--target=wasm32-wasi' ],
+                    },
+                  }],
+                ]
+              }],
+            ],
+          }, {
+            # wasm32-unknown-unknown
+            'cflags': [ '--target=wasm32-unknown-unknown' ],
+            'ldflags': [
+              '--target=wasm32-unknown-unknown',
+            ],
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'WARNING_CFLAGS': [ '--target=wasm32-unknown-unknown' ],
+                  'OTHER_LDFLAGS': [
+                    '--target=wasm32-unknown-unknown',
+                  ],
+                },
+              }],
+            ],
+          }],
+        ]
+      }],
+    ],
+
+    'target_conditions': [
+      ['_type=="executable"', {
+        'sources': [
+          '<!@(node -p "require(\'emnapi\').sources.map(x => JSON.stringify(path.relative(process.cwd(), x))).join(\' \')")'
+        ],
+        'conditions': [
+          ['target_os == "emscripten"', {
+            'product_extension': 'js',
+          }, {
+            # not emscripten
+            'product_extension': 'wasm',
+
+            'ldflags': [
+              '-Wl,--export-dynamic',
+              '-Wl,--export=malloc',
+              '-Wl,--export=free',
+              '-Wl,--export=napi_register_wasm_v1',
+              '-Wl,--export-if-defined=node_api_module_get_api_version_v1',
+              '-Wl,--import-undefined',
+              '-Wl,--export-table',
+            ],
+
+            'conditions': [
+              ['OS=="mac"', {
+                'xcode_settings': {
+                  'OTHER_LDFLAGS': [
+                    '-Wl,--export-dynamic',
+                    '-Wl,--export=malloc',
+                    '-Wl,--export=free',
+                    '-Wl,--export=napi_register_wasm_v1',
+                    '-Wl,--export-if-defined=node_api_module_get_api_version_v1',
+                    '-Wl,--import-undefined',
+                    '-Wl,--export-table',
+                  ],
+                },
+              }],
+              ['wasm_threads != 0', {
+                'ldflags': [
+                  '-Wl,--import-memory',
+                  '-Wl,--shared-memory',
+                  '-Wl,--max-memory=2147483648',
+                ],
+                'conditions': [
+                  ['OS=="mac"', {
+                    'xcode_settings': {
+                      'OTHER_LDFLAGS': [
+                        '-Wl,--import-memory',
+                        '-Wl,--shared-memory',
+                        '-Wl,--max-memory=2147483648',
+                      ]
+                    },
+                  }],
+                ],
+              }, {
+                'ldflags': [
+                  '-Wl,--initial-memory=16777216'
+                ],
+                'conditions': [
+                  ['OS=="mac"', {
+                    'xcode_settings': {
+                      'OTHER_LDFLAGS': [
+                        '-Wl,--initial-memory=16777216'
+                      ]
+                    },
+                  }],
+                ],
+              }],
+              ['target_os == "wasi"', {}, {
+                'defines': [
+                  'PAGESIZE=65536'
+                ],
+                'ldflags': [
+                  '-nostdlib',
+                  '-Wl,--no-entry',
+                ],
+                'sources': [
+                  'src/malloc/sbrk.c',
+                  'src/malloc/memcpy.c',
+                  'src/malloc/memset.c',
+                  'src/malloc/dlmalloc/dlmalloc.c',
+                ],
+                'conditions': [
+                  ['OS=="mac"', {
+                    'xcode_settings': {
+                      'OTHER_LDFLAGS': [
+                        '-nostdlib',
+                        '-Wl,--no-entry',
+                      ],
+                    },
+                  }],
+                  ['wasm_threads != 0', {
+                    # wasm32 + threads
+                    'sources': [
+                      'src/thread/async_worker_create.c',
+                      'src/thread/async_worker_init.S',
+                    ],
+                    'defines': [
+                      'USE_LOCKS=1'
+                    ],
+                    'ldflags': [
+                      '-Wl,--export=emnapi_async_worker_create',
+                      '-Wl,--export=emnapi_async_worker_init',
+                    ],
+                    'conditions': [
+                      ['OS=="mac"', {
+                        'xcode_settings': {
+                          'OTHER_LDFLAGS': [
+                            '-Wl,--export=emnapi_async_worker_create',
+                            '-Wl,--export=emnapi_async_worker_init',
+                          ],
+                        },
+                      }],
+                    ],
+                  }],
+                ]
+              }],
+            ]
+          }]
+        ],
+      }],
+    ],
+  }
+}
diff --git a/packages/emnapi/emnapi.gyp b/packages/emnapi/emnapi.gyp
new file mode 100644
index 0000000..4a97350
--- /dev/null
+++ b/packages/emnapi/emnapi.gyp
@@ -0,0 +1,50 @@
+{
+  'targets': [
+    {
+      'target_name': 'dlmalloc',
+      'type': 'static_library',
+      'defines': [
+        'PAGESIZE=65536'
+      ],
+      'sources': [
+        'src/malloc/sbrk.c',
+        'src/malloc/memcpy.c',
+        'src/malloc/memset.c',
+        'src/malloc/dlmalloc/dlmalloc.c',
+      ],
+      'conditions': [
+        ['wasm_threads != 0', {
+          'defines': [
+            'USE_LOCKS=1'
+          ],
+        }],
+      ],
+    },
+    {
+      'target_name': 'emmalloc',
+      'type': 'static_library',
+      'defines': [
+        'PAGESIZE=65536'
+      ],
+      'sources': [
+        'src/malloc/sbrk.c',
+        'src/malloc/memcpy.c',
+        'src/malloc/memset.c',
+        'src/malloc/emmalloc/emmalloc.c',
+      ],
+      'cflags': [ '-fno-strict-aliasing' ],
+      'conditions': [
+        ['OS == "mac"', {
+          'xcode_settings': {
+            'GCC_STRICT_ALIASING': 'NO',
+          }
+        }],
+        ['wasm_threads != 0', {
+          'defines': [
+            '__EMSCRIPTEN_SHARED_MEMORY__=1'
+          ],
+        }],
+      ],
+    }
+  ]
+}
diff --git a/packages/emnapi/index.js b/packages/emnapi/index.js
index 05424c6..2eb2bdb 100644
--- a/packages/emnapi/index.js
+++ b/packages/emnapi/index.js
@@ -5,7 +5,7 @@ const path = require('path')
 
 const include = path.join(__dirname, 'include')
 const includeDir = path.relative(process.cwd(), include)
-const jsLibrary = path.join(__dirname, './dist/library_napi.js')
+const jsLibrary = path.join(__dirname, './dist/library_napi.js').replace(/\\|\\\\/g, '/')
 const sources = [
   path.join(__dirname, './src/js_native_api.c'),
   path.join(__dirname, './src/node_api.c'),
@@ -20,8 +20,10 @@ const sources = [
   path.join(__dirname, './src/uv/unix/async.c'),
   path.join(__dirname, './src/uv/unix/core.c')
 ]
+const targets = path.relative(process.cwd(), path.join(__dirname, 'emnapi.gyp'))
 
 exports.include = include
 exports.include_dir = includeDir
 exports.js_library = jsLibrary
 exports.sources = sources
+exports.targets = targets

From b7286b9409f3231701a778b1d108fb03f61ba161 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Fri, 19 Jan 2024 00:09:25 +0800
Subject: [PATCH 2/4] napi_build_version 9

---
 packages/emnapi/common.gypi | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
index cb9a18b..3463c5c 100644
--- a/packages/emnapi/common.gypi
+++ b/packages/emnapi/common.gypi
@@ -4,7 +4,7 @@
   'variables': {
     # 'emscripten' | 'wasi' | 'unknown'
     'target_os%': 'emscripten',
-    'napi_build_version%': '8',
+    'napi_build_version%': '9',
     'clang': 1,
     'target_arch%': 'wasm32',
     'wasm_threads%': 0,

From f53d8229024409daf81c2593c76a5a62e2e06a5c Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Sat, 20 Jan 2024 11:34:08 +0800
Subject: [PATCH 3/4] update common.gypi

---
 packages/emnapi/common.gypi | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/packages/emnapi/common.gypi b/packages/emnapi/common.gypi
index 3463c5c..b1f4788 100644
--- a/packages/emnapi/common.gypi
+++ b/packages/emnapi/common.gypi
@@ -89,15 +89,13 @@
           '-sDEFAULT_TO_CXX=0',
         ],
         'ldflags': [
-          '--js-library=<!(node -p "require(\'emnapi\').js_library")',
           "-sALLOW_MEMORY_GROWTH=1",
           "-sEXPORTED_FUNCTIONS=['_malloc','_free','_napi_register_wasm_v1','_node_api_module_get_api_version_v1']",
           '-sNODEJS_CATCH_EXIT=0',
           '-sNODEJS_CATCH_REJECTION=0',
-          '-sAUTO_JS_LIBRARIES=0',
-          '-sAUTO_NATIVE_LIBRARIES=0',
           '-sWASM_BIGINT=1',
           '-sMIN_CHROME_VERSION=84',
+          '-sMIN_NODE_VERSION=161500',
           '-sSTACK_SIZE=2MB',
           '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
         ],
@@ -122,15 +120,13 @@
                 '-sDEFAULT_TO_CXX=0',
               ],
               'OTHER_LDFLAGS': [
-                '--js-library=<!(node -p "require(\'emnapi\').js_library")',
                 "-sALLOW_MEMORY_GROWTH=1",
                 "-sEXPORTED_FUNCTIONS=['_malloc','_free','_napi_register_wasm_v1','_node_api_module_get_api_version_v1']",
                 '-sNODEJS_CATCH_EXIT=0',
                 '-sNODEJS_CATCH_REJECTION=0',
-                '-sAUTO_JS_LIBRARIES=0',
-                '-sAUTO_NATIVE_LIBRARIES=0',
                 '-sWASM_BIGINT=1',
                 '-sMIN_CHROME_VERSION=84',
+                '-sMIN_NODE_VERSION=161500',
                 '-sSTACK_SIZE=2MB',
                 '-sDEFAULT_PTHREAD_STACK_SIZE=2MB',
               ],
@@ -254,6 +250,9 @@
         'conditions': [
           ['target_os == "emscripten"', {
             'product_extension': 'js',
+            'libraries': [
+              '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+            ]
           }, {
             # not emscripten
             'product_extension': 'wasm',

From 972a03174759c6deb3b7e2955fa65bb2243e9ce7 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Sat, 20 Jan 2024 11:34:29 +0800
Subject: [PATCH 4/4] add emnapi static library targets

---
 packages/emnapi/emnapi.gyp | 62 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 62 insertions(+)

diff --git a/packages/emnapi/emnapi.gyp b/packages/emnapi/emnapi.gyp
index 4a97350..8af6858 100644
--- a/packages/emnapi/emnapi.gyp
+++ b/packages/emnapi/emnapi.gyp
@@ -45,6 +45,68 @@
           ],
         }],
       ],
+    },
+    {
+      'target_name': 'emnapi_basic',
+      'type': 'static_library',
+      'sources': [
+        'src/js_native_api.c',
+        'src/node_api.c',
+        'src/async_cleanup_hook.c',
+        'src/async_context.c',
+      ],
+      'direct_dependent_settings': {
+        'include_dirs+': [ 'include' ],
+      },
+      'link_settings': {
+        'target_conditions': [
+          ['_type == "executable" and target_os == "emscripten"', {
+            'libraries': [
+              '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+            ]
+          }],
+        ]
+      },
+      'conditions': [
+        ['wasm_threads != 0 and target_os != "emscripten" and target_os != "wasi"', {
+          'sources': [
+            'src/thread/async_worker_create.c',
+            'src/thread/async_worker_init.S',
+          ],
+        }],
+      ]
+    },
+    {
+      'target_name': 'emnapi',
+      'type': 'static_library',
+      'sources': [
+        'src/js_native_api.c',
+        'src/node_api.c',
+        'src/async_cleanup_hook.c',
+        'src/async_context.c',
+
+        'src/uv/uv-common.c',
+        'src/uv/threadpool.c',
+        'src/uv/unix/loop.c',
+        'src/uv/unix/thread.c',
+        'src/uv/unix/async.c',
+        'src/uv/unix/core.c',
+
+        'src/async_work.c',
+        'src/threadsafe_function.c',
+      ],
+      'direct_dependent_settings': {
+        'include_dirs+': [ 'include' ],
+      },
+      'link_settings': {
+        'target_conditions': [
+          ['_type == "executable" and target_os == "emscripten"', {
+            'libraries': [
+              '--js-library=<!(node -p "require(\'emnapi\').js_library")',
+            ]
+          }],
+        ]
+      },
     }
   ]
 }
