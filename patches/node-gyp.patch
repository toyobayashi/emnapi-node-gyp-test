From 5fb79ad0ed697e4e5c7188ecd229d4f10988c8a4 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Sun, 28 Jan 2024 23:21:28 +0800
Subject: [PATCH 1/6] feat: `node-gyp build` with make generator on Windows

---
 lib/build.js     | 18 ++++++++++++------
 lib/configure.js | 14 ++++++++++++--
 2 files changed, 24 insertions(+), 8 deletions(-)

diff --git a/lib/build.js b/lib/build.js
index 6b8d84d3ed..07779f8df1 100644
--- a/lib/build.js
+++ b/lib/build.js
@@ -85,18 +85,24 @@ async function build (gyp, argv) {
   async function findSolutionFile () {
     const files = await glob('build/*.sln')
     if (files.length === 0) {
-      throw new Error('Could not find *.sln file. Did you run "configure"?')
+      if (require('fs').existsSync('build/Makefile') || (await glob('build/*.mk')).length !== 0) {
+        command = makeCommand
+        await doWhich(false)
+        return
+      } else {
+        throw new Error('Could not find *.sln file or Makefile. Did you run "configure"?')
+      }
     }
     guessedSolution = files[0]
     log.verbose('found first Solution file', guessedSolution)
-    await doWhich()
+    await doWhich(true)
   }
 
   /**
    * Uses node-which to locate the msbuild / make executable.
    */
 
-  async function doWhich () {
+  async function doWhich (win) {
     // On Windows use msbuild provided by node-gyp configure
     if (win) {
       if (!config.variables.msbuild_path) {
@@ -104,21 +110,21 @@ async function build (gyp, argv) {
       }
       command = config.variables.msbuild_path
       log.verbose('using MSBuild:', command)
-      await doBuild()
+      await doBuild(win)
       return
     }
 
     // First make sure we have the build command in the PATH
     const execPath = await which(command)
     log.verbose('`which` succeeded for `' + command + '`', execPath)
-    await doBuild()
+    await doBuild(win)
   }
 
   /**
    * Actually spawn the process and compile the module.
    */
 
-  async function doBuild () {
+  async function doBuild (win) {
     // Enable Verbose build
     const verbose = log.logger.isVisible('verbose')
     let j
diff --git a/lib/configure.js b/lib/configure.js
index e4b8c94e3d..b0fe7ec32f 100644
--- a/lib/configure.js
+++ b/lib/configure.js
@@ -92,8 +92,18 @@ async function configure (gyp, argv) {
     log.verbose(
       'build dir', '"build" dir needed to be created?', isNew ? 'Yes' : 'No'
     )
-    const vsInfo = win ? await findVisualStudio(release.semver, gyp.opts['msvs-version']) : null
-    return createConfigFile(vsInfo)
+    if (win) {
+      let gypFormatIndex = argv.indexOf('-f')
+      if (gypFormatIndex === -1) {
+        gypFormatIndex = argv.indexOf('--format')
+      }
+      if (gypFormatIndex === -1 || !argv[gypFormatIndex + 1] || argv[gypFormatIndex + 1] === 'msvs') {
+        const vsInfo = await findVisualStudio(release.semver, gyp.opts['msvs-version'])
+        return createConfigFile(vsInfo)
+      }
+      return createConfigFile({})
+    }
+    return createConfigFile(null)
   }
 
   async function createConfigFile (vsInfo) {

From c25782ddaec79e3ac7fb3694b3f558ea19d65960 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Sun, 28 Jan 2024 23:28:04 +0800
Subject: [PATCH 2/6] do not add symlinks to `%Path%`

---
 lib/build.js | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/lib/build.js b/lib/build.js
index 07779f8df1..fef817ea0a 100644
--- a/lib/build.js
+++ b/lib/build.js
@@ -102,48 +102,48 @@ async function build (gyp, argv) {
    * Uses node-which to locate the msbuild / make executable.
    */
 
-  async function doWhich (win) {
+  async function doWhich (msvs) {
     // On Windows use msbuild provided by node-gyp configure
-    if (win) {
+    if (msvs) {
       if (!config.variables.msbuild_path) {
         throw new Error('MSBuild is not set, please run `node-gyp configure`.')
       }
       command = config.variables.msbuild_path
       log.verbose('using MSBuild:', command)
-      await doBuild(win)
+      await doBuild(msvs)
       return
     }
 
     // First make sure we have the build command in the PATH
     const execPath = await which(command)
     log.verbose('`which` succeeded for `' + command + '`', execPath)
-    await doBuild(win)
+    await doBuild(msvs)
   }
 
   /**
    * Actually spawn the process and compile the module.
    */
 
-  async function doBuild (win) {
+  async function doBuild (msvs) {
     // Enable Verbose build
     const verbose = log.logger.isVisible('verbose')
     let j
 
-    if (!win && verbose) {
+    if (!msvs && verbose) {
       argv.push('V=1')
     }
 
-    if (win && !verbose) {
+    if (msvs && !verbose) {
       argv.push('/clp:Verbosity=minimal')
     }
 
-    if (win) {
+    if (msvs) {
       // Turn off the Microsoft logo on Windows
       argv.push('/nologo')
     }
 
     // Specify the build type, Release by default
-    if (win) {
+    if (msvs) {
       // Convert .gypi config target_arch to MSBuild /Platform
       // Since there are many ways to state '32-bit Intel', default to it.
       // N.B. msbuild's Condition string equality tests are case-insensitive.
@@ -179,7 +179,7 @@ async function build (gyp, argv) {
       }
     }
 
-    if (win) {
+    if (msvs) {
       // did the user specify their own .sln file?
       const hasSln = argv.some(function (arg) {
         return path.extname(arg) === '.sln'

From a43d5f29ae08939ff3dcc0e97b31caf01f4f3b14 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Mon, 29 Jan 2024 00:42:52 +0800
Subject: [PATCH 3/6] also try to find visual studio if format is not msvs

---
 lib/configure.js | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/lib/configure.js b/lib/configure.js
index b0fe7ec32f..af1cb50599 100644
--- a/lib/configure.js
+++ b/lib/configure.js
@@ -101,7 +101,11 @@ async function configure (gyp, argv) {
         const vsInfo = await findVisualStudio(release.semver, gyp.opts['msvs-version'])
         return createConfigFile(vsInfo)
       }
-      return createConfigFile({})
+      let vsInfo = {}
+      try {
+        vsInfo = await findVisualStudio(release.semver, gyp.opts['msvs-version'])
+      } catch (_) {}
+      return createConfigFile(vsInfo)
     }
     return createConfigFile(null)
   }

From 943e9d4f12085c1d03b27ba1babdd485ae725223 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Tue, 30 Jan 2024 18:35:38 +0800
Subject: [PATCH 4/6] format can include flavor so use startsWith

---
 lib/configure.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/configure.js b/lib/configure.js
index af1cb50599..25987bbb51 100644
--- a/lib/configure.js
+++ b/lib/configure.js
@@ -97,7 +97,7 @@ async function configure (gyp, argv) {
       if (gypFormatIndex === -1) {
         gypFormatIndex = argv.indexOf('--format')
       }
-      if (gypFormatIndex === -1 || !argv[gypFormatIndex + 1] || argv[gypFormatIndex + 1] === 'msvs') {
+      if (gypFormatIndex === -1 || !argv[gypFormatIndex + 1] || argv[gypFormatIndex + 1].startsWith('msvs')) {
         const vsInfo = await findVisualStudio(release.semver, gyp.opts['msvs-version'])
         return createConfigFile(vsInfo)
       }

From ce7badaa025beabcb9348d851ba0c82eca1d91bd Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Tue, 4 Jun 2024 21:20:53 +0800
Subject: [PATCH 5/6] exclude make generator

---
 lib/configure.js | 24 +++++++++++++++---------
 1 file changed, 15 insertions(+), 9 deletions(-)

diff --git a/lib/configure.js b/lib/configure.js
index 25987bbb51..ee672cfbf2 100644
--- a/lib/configure.js
+++ b/lib/configure.js
@@ -93,18 +93,24 @@ async function configure (gyp, argv) {
       'build dir', '"build" dir needed to be created?', isNew ? 'Yes' : 'No'
     )
     if (win) {
-      let gypFormatIndex = argv.indexOf('-f')
-      if (gypFormatIndex === -1) {
-        gypFormatIndex = argv.indexOf('--format')
-      }
-      if (gypFormatIndex === -1 || !argv[gypFormatIndex + 1] || argv[gypFormatIndex + 1].startsWith('msvs')) {
-        const vsInfo = await findVisualStudio(release.semver, gyp.opts['msvs-version'])
-        return createConfigFile(vsInfo)
+      let usingMakeGenerator = false
+      for (let i = argv.length - 1; i >= 0; --i) {
+        const arg = argv[i]
+        if (arg === '-f' || arg === '--format') {
+          const format = argv[i + 1]
+          if (typeof format === 'string' && format.startsWith('make')) {
+            usingMakeGenerator = true
+            break
+          }
+        } else if (arg.startsWith('--format=make')) {
+          usingMakeGenerator = true
+          break
+        }
       }
       let vsInfo = {}
-      try {
+      if (!usingMakeGenerator) {
         vsInfo = await findVisualStudio(release.semver, gyp.opts['msvs-version'])
-      } catch (_) {}
+      }
       return createConfigFile(vsInfo)
     }
     return createConfigFile(null)

From cb8bfc15ed780a6e9940bc7879f33a8d97e68b64 Mon Sep 17 00:00:00 2001
From: toyobayashi <lifenglin314@outlook.com>
Date: Thu, 6 Jun 2024 22:11:41 +0800
Subject: [PATCH 6/6] hoist fs

---
 lib/build.js | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/lib/build.js b/lib/build.js
index fef817ea0a..e1f49bb6ff 100644
--- a/lib/build.js
+++ b/lib/build.js
@@ -1,6 +1,7 @@
 'use strict'
 
-const fs = require('graceful-fs').promises
+const gracefulFs = require('graceful-fs')
+const fs = gracefulFs.promises
 const path = require('path')
 const { glob } = require('glob')
 const log = require('./log')
@@ -85,7 +86,7 @@ async function build (gyp, argv) {
   async function findSolutionFile () {
     const files = await glob('build/*.sln')
     if (files.length === 0) {
-      if (require('fs').existsSync('build/Makefile') || (await glob('build/*.mk')).length !== 0) {
+      if (gracefulFs.existsSync('build/Makefile') || (await glob('build/*.mk')).length !== 0) {
         command = makeCommand
         await doWhich(false)
         return
